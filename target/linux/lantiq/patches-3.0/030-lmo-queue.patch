--- a/drivers/mtd/maps/lantiq-flash.c
+++ b/drivers/mtd/maps/lantiq-flash.c
@@ -20,6 +20,8 @@
 #include <linux/platform_device.h>
 #include <linux/mtd/physmap.h>
 
+#include "../mtdcore.h"
+
 #include <lantiq_soc.h>
 #include <lantiq_platform.h>
 
--- a/arch/mips/lantiq/clk.c
+++ b/arch/mips/lantiq/clk.c
@@ -100,6 +100,17 @@ void clk_put(struct clk *clk)
 }
 EXPORT_SYMBOL(clk_put);
 
+int clk_enable(struct clk *clk)
+{
+	/* clocks are always enabled*/
+	return 0;
+}
+
+void clk_disable(struct clk *clk)
+{
+	/* clocks are always enabled*/
+}
+
 static inline u32 ltq_get_counter_resolution(void)
 {
 	u32 res;
--- a/arch/mips/lantiq/irq.c
+++ b/arch/mips/lantiq/irq.c
@@ -9,6 +9,7 @@
 
 #include <linux/interrupt.h>
 #include <linux/ioport.h>
+#include <linux/module.h>
 
 #include <asm/bootinfo.h>
 #include <asm/irq_cpu.h>
@@ -99,6 +100,7 @@ void ltq_mask_and_ack_irq(struct irq_dat
 	ltq_icu_w32(ltq_icu_r32(ier) & ~(1 << irq_nr), ier);
 	ltq_icu_w32((1 << irq_nr), isr);
 }
+EXPORT_SYMBOL(ltq_mask_and_ack_irq);
 
 static void ltq_ack_irq(struct irq_data *d)
 {
--- a/arch/mips/lantiq/setup.c
+++ b/arch/mips/lantiq/setup.c
@@ -18,6 +18,8 @@
 #include "devices.h"
 #include "prom.h"
 
+unsigned long physical_memsize = 0L;
+
 void __init plat_mem_setup(void)
 {
 	/* assume 16M as default incase uboot fails to pass proper ramsize */
@@ -40,8 +42,8 @@ void __init plat_mem_setup(void)
 		}
 		envp++;
 	}
-	memsize *= 1024 * 1024;
-	add_memory_region(0x00000000, memsize, BOOT_MEM_RAM);
+	physical_memsize = memsize * 1024 * 1024;
+	add_memory_region(0x00000000, physical_memsize, BOOT_MEM_RAM);
 }
 
 static int __init
